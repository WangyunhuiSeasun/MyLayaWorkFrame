var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig = /** @class */ (function () {
    function AppConfig() {
    }
    AppConfig.startScene = "GameMain.scene";
    return AppConfig;
}());
exports.default = AppConfig;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var ButtonAnim_1 = require("./View/ButtonAnim");
var GameOver_1 = require("./View/GameOver/GameOver");
var ViewAutoScale_1 = require("./View/ViewAutoScale");
var RoleSkin_1 = require("./View/GameStart/RoleSkin");
var GameStart_1 = require("./View/GameStart/GameStart");
var Gaming_1 = require("./View/Gaming/Gaming");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var TipsView_1 = require("./View/TipsView/TipsView");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("View/GameOver/GameOver.ts", GameOver_1.default);
        reg("View/ViewAutoScale.ts", ViewAutoScale_1.default);
        reg("View/GameStart/RoleSkin.ts", RoleSkin_1.default);
        reg("View/GameStart/GameStart.ts", GameStart_1.default);
        reg("View/Gaming/Gaming.ts", Gaming_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "View/GameStart.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./Mgr/GameMgr":4,"./View/ButtonAnim":8,"./View/GameOver/GameOver":9,"./View/GameStart/GameStart":10,"./View/GameStart/RoleSkin":11,"./View/Gaming/Gaming":12,"./View/LoadingView/LoadingView":13,"./View/TipsView/TipsView":14,"./View/ViewAutoScale":15}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var AppConfig_1 = require("./AppConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var Main = /** @class */ (function () {
    function Main() {
        this.loadingUI = null;
        this.loadingView = null;
        //预加载列表
        this.preLoadRes = new Array();
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    ;
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        // //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        this.GameInitLoad_CloudFlame();
    };
    //游戏初始化加载
    Main.prototype.GameInitLoad_CloudFlame = function () {
        Laya.loader.maxLoader = 50;
        this.InitLoadingView_CloudFlame();
        this.LoadRes_CloudFlame();
    };
    //初始化加载界面
    Main.prototype.InitLoadingView_CloudFlame = function () {
        this.loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this.loadingUI);
        this.loadingUI.width = Laya.stage.width;
        this.loadingUI.height = Laya.stage.height;
        this.loadingView = this.loadingUI.getComponent(LoadingView_1.default);
        this.loadingView.SetProcess_CloudFlame(0);
    };
    //添加预加载的资源	
    Main.prototype.PreLoadRes_CloudFlame = function () {
        this.preLoadRes.push({ url: "res/atlas/GameCommon.atlas", type: Laya.Loader.ATLAS });
        this.preLoadRes.push({ url: "GameCommon/BG_Main.png", type: Laya.Loader.IMAGE });
        this.preLoadRes.push({ url: "GameCommon/BG_Pop.png", type: Laya.Loader.IMAGE });
    };
    //加载资源
    Main.prototype.LoadRes_CloudFlame = function () {
        this.PreLoadRes_CloudFlame();
        var resource = this.preLoadRes;
        var self = this;
        if (!Laya.Browser.onMiniGame) //本地或网页加载策略
         {
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.LoadResComplate_CloudFlame();
                }), Laya.Handler.create(this, function (res) {
                    self.loadingView.SetProcess_CloudFlame(res);
                }));
            }
            else {
                self.LoadResComplate_CloudFlame();
            }
        }
    };
    //加载资源完成
    Main.prototype.LoadResComplate_CloudFlame = function () {
        this.loadingView.SetProcess_CloudFlame(1);
        this.UserLogin_CloudFlame();
        this.CloadLoadingUI_CloudFlame();
        console.log("---游戏加载初始化完成---");
    };
    //用户登录
    Main.prototype.UserLogin_CloudFlame = function () {
        var self = this;
        if (!Laya.Browser.onMiniGame) //本地或网页登录
         {
            User_1.default.TestInitUser_CloudFlame();
            GameConfig_1.default.startScene && Laya.Scene.open(AppConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }
    };
    //关闭加载界面
    Main.prototype.CloadLoadingUI_CloudFlame = function () {
        if (this.loadingUI && !this.loadingUI.destroyed) {
            this.loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./AppConfig":1,"./GameConfig":2,"./User/User":7,"./View/LoadingView/LoadingView":13,"./ui/layaMaxUI":17}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var SoundMgr_1 = require("./SoundMgr");
var GameMgr = /** @class */ (function (_super) {
    __extends(GameMgr, _super);
    function GameMgr() {
        var _this = _super.call(this) || this;
        GameMgr.instance = _this;
        return _this;
    }
    GameMgr.prototype.onAwake = function () {
        this.owner.scaleY = Laya.stage.height / this.owner.height;
        this.owner.scaleX = Laya.stage.width / this.owner.width;
    };
    GameMgr.prototype.onStart = function () {
        //temp 添加读档存档
        this.PreCreateGame_CloudFlame();
    };
    GameMgr.prototype.PreCreateGame_CloudFlame = function () {
        //todo：这里添加初始化主场景的代码。
        var self = this;
        ViewMgr_1.default.instance.OpenView_CloudFlame(ViewMgr_1.ViewDef.GameOver, null, null);
        SoundMgr_1.default.instance.PlayBGM_CloudFlame("bgm");
    };
    GameMgr.instance = null;
    return GameMgr;
}(Laya.Script));
exports.default = GameMgr;
},{"./SoundMgr":5,"./ViewMgr":6}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr = /** @class */ (function () {
    function SoundMgr() {
        this.enabledSound = true;
    }
    Object.defineProperty(SoundMgr.prototype, "Enabled_CloudFlame", {
        get: function () {
            return this.enabledSound;
        },
        set: function (e) {
            if (!e) {
                this.StopBGM_CloudFlame();
            }
            this.enabledSound = e;
        },
        enumerable: true,
        configurable: true
    });
    SoundMgr.prototype.GetSoundUrl_CloudFlame = function (name) {
        var url = SoundMgr.strSoundResPath + name + ".mp3";
        return url;
    };
    SoundMgr.prototype.PlaySound_CloudFlame = function (name) {
        if (!this.enabledSound)
            return;
        var url = this.GetSoundUrl_CloudFlame(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = SoundMgr.strSoundResPath + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    SoundMgr.prototype.PlayBGM_CloudFlame = function (name) {
        if (!this.enabledSound)
            return;
        var url = this.GetSoundUrl_CloudFlame(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.bgm) {
                this.bgm = wx.createInnerAudioContext();
            }
            this.bgm.stop();
            this.bgm.src = url;
            this.bgm.loop = true;
            this.bgm.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    SoundMgr.prototype.StopBGM_CloudFlame = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.stop();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    SoundMgr.strSoundResPath = "subRes/sound/";
    SoundMgr.instance = new SoundMgr();
    return SoundMgr;
}());
exports.default = SoundMgr;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewDef;
(function (ViewDef) {
    ViewDef["None"] = "";
    ViewDef["TipsView"] = "View/TipsView.json";
    ViewDef["GameStart"] = "View/GameStart.json";
    ViewDef["Gaming"] = "View/Gaming.json";
    ViewDef["GameOver"] = "View/GameOver.json";
    //todo:添加你的界面
})(ViewDef = exports.ViewDef || (exports.ViewDef = {}));
//界面管理器
var ViewMgr = /** @class */ (function () {
    function ViewMgr() {
        this.views = {};
    }
    ViewMgr.prototype.OpenView_CloudFlame = function (viewType, data, oncomplate) {
        if (this.views[viewType]) {
            var view = this.views[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.OpenView_CloudFlame(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        var viewUrl = String(viewType);
        var self = this;
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self.views[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.OpenView_CloudFlame(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    ViewMgr.prototype.CloseView_CloudFlame = function (viewType) {
        var view = this.views[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this.views[viewType] = null;
        }
    };
    ViewMgr.prototype.ShowView_CloudFlame = function (viewType) {
        var view = this.views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.HideView_CloudFlame = function (viewType) {
        var view = this.views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.GetView_CloudFlame = function (viewType) {
        return this.views[viewType];
    };
    ViewMgr.prototype.ShowTips_CloudFlame = function (msg) {
        this.OpenView_CloudFlame(ViewDef.TipsView, msg);
    };
    ViewMgr.instance = new ViewMgr();
    return ViewMgr;
}());
exports.default = ViewMgr;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(User, "IsLogin_CloudFlame", {
        get: function () {
            return (User.code != "") || (User.token != "");
        },
        enumerable: true,
        configurable: true
    });
    User.GetSaveData__CloudFlame = function () {
        return JSON.stringify({ "skinIndex": this.skinIndex, "levelNum": this.levelNum, "moneyNum": this.moneyNum });
    };
    User.TestInitUser_CloudFlame = function () {
        User.nickName = "User";
        User.skinIndex = 0;
        User.levelNum = 1;
        User.moneyNum = 10000000;
    };
    User.InitiUser_CloudFlame = function (data) {
        if (data && 0 != data) {
            User.skinIndex = data.skinIndex;
            User.levelNum = data.levelNum;
            User.moneyNum = data.moneyNum;
        }
        else {
            //todo：处理没有获取到玩家数据的情况
        }
    };
    User.code = "";
    User.openId = "";
    User.token = null;
    User.gender = 0;
    User.nickName = "";
    User.skinMax = 0;
    User.skinIndex = 0; //当前皮肤索引
    User.levelNum = 1; //当前关卡
    User.moneyNum = 0; //金币数量
    return User;
}(Laya.Script));
exports.default = User;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var ButtonAnim = /** @class */ (function (_super) {
    __extends(ButtonAnim, _super);
    function ButtonAnim() {
        var _this = _super.call(this) || this;
        _this.bUseSound = true;
        _this.nFirstScaleX = 1;
        _this.nFirstScaleY = 1;
        return _this;
    }
    ButtonAnim.prototype.onAwake = function () {
        this.nFirstScaleX = this.owner.scaleX;
        this.nFirstScaleY = this.owner.scaleY;
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown_CloudFlame);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp_CloudFlame);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp_CloudFlame);
    };
    ButtonAnim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    ButtonAnim.prototype.onDown_CloudFlame = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.95 * this.nFirstScaleX, scaleY: 0.95 * this.nFirstScaleY }, 25);
        if (this.bUseSound) {
            SoundMgr_1.default.instance.PlaySound_CloudFlame("clickBtn");
        }
    };
    ButtonAnim.prototype.onUp_CloudFlame = function () {
        Laya.Tween.to(this.owner, { scaleX: this.nFirstScaleX, scaleY: this.nFirstScaleY }, 25);
    };
    return ButtonAnim;
}(Laya.Script));
exports.default = ButtonAnim;
},{"../Mgr/SoundMgr":5}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameOver = /** @class */ (function (_super) {
    __extends(GameOver, _super);
    function GameOver() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.popWindow = null;
        _this.closeBtn = null;
        _this.backBtn = null;
        _this.replayBtn = null;
        _this.scoreText = null;
        return _this;
    }
    GameOver.prototype.onAwake = function () {
        this.popWindow = this.owner.getChildByName("PopWindow");
        this.closeBtn = this.popWindow.getChildByName("CloseBtn");
        this.backBtn = this.popWindow.getChildByName("BackBtn");
        this.replayBtn = this.popWindow.getChildByName("ReplayBtn");
        this.scoreText = this.popWindow.getChildByName("ScoreNum");
        this.InitScore_CloudFlame();
    };
    GameOver.prototype.AddEvent_CloudFlame = function () {
        this.closeBtn.on(Laya.Event.CLICK, this, this.OnCloseOrBackBtn_CloudFlame);
        this.backBtn.on(Laya.Event.CLICK, this, this.OnCloseOrBackBtn_CloudFlame);
        this.replayBtn.on(Laya.Event.CLICK, this, this.OnRePlayBtn_CloudFlame);
    };
    GameOver.prototype.RemoveEvent_CloudFlame = function () {
        this.closeBtn.off(Laya.Event.CLICK, this, this.OnCloseOrBackBtn_CloudFlame);
        this.backBtn.off(Laya.Event.CLICK, this, this.OnCloseOrBackBtn_CloudFlame);
        this.replayBtn.off(Laya.Event.CLICK, this, this.OnRePlayBtn_CloudFlame);
    };
    GameOver.prototype.InitScore_CloudFlame = function () {
        this.scoreText.text = "0";
    };
    GameOver.prototype.OnCloseOrBackBtn_CloudFlame = function () {
        ViewMgr_1.default.instance.OpenView_CloudFlame(ViewMgr_1.ViewDef.GameStart, null, function () {
            ViewMgr_1.default.instance.CloseView_CloudFlame(ViewMgr_1.ViewDef.GameOver);
            ViewMgr_1.default.instance.CloseView_CloudFlame(ViewMgr_1.ViewDef.Gaming);
        });
    };
    GameOver.prototype.OnRePlayBtn_CloudFlame = function () {
        ViewMgr_1.default.instance.CloseView_CloudFlame(ViewMgr_1.ViewDef.GameOver);
        ViewMgr_1.default.instance.CloseView_CloudFlame(ViewMgr_1.ViewDef.Gaming);
        ViewMgr_1.default.instance.OpenView_CloudFlame(ViewMgr_1.ViewDef.Gaming, null, null);
    };
    return GameOver;
}(ViewBase_1.default));
exports.default = GameOver;
},{"../../Mgr/ViewMgr":6,"../ViewBase":16}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var RoleSkin_1 = require("./RoleSkin");
var User_1 = require("../../User/User");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameStart = /** @class */ (function (_super) {
    __extends(GameStart, _super);
    function GameStart() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.settingBtn = null;
        _this.startBtn = null;
        _this.selectSkinZone = null;
        _this.leftBtn = null;
        _this.rightBtn = null;
        _this.role = null;
        _this.roleSkin = null;
        return _this;
    }
    GameStart.prototype.onAwake = function () {
        this.settingBtn = this.owner.getChildByName("SettingBtn");
        this.startBtn = this.owner.getChildByName("StartBtn");
        this.selectSkinZone = this.owner.getChildByName("SelectSkinZone");
        this.leftBtn = this.selectSkinZone.getChildByName("LeftBtn");
        this.rightBtn = this.selectSkinZone.getChildByName("RightBtn");
        this.role = this.selectSkinZone.getChildByName("Role");
        this.roleSkin = this.role.getComponent(RoleSkin_1.default);
        this.ShowSkinBtn_CloudFlame();
        this.ShowSettingBtn_CloudFlame();
    };
    GameStart.prototype.AddEvent_CloudFlame = function () {
        this.settingBtn.on(Laya.Event.CLICK, this, this.OnSettingBtn_CloudFlame);
        this.startBtn.on(Laya.Event.CLICK, this, this.OnStartBtn_CloudFlame);
        this.leftBtn.on(Laya.Event.CLICK, this, this.OnSkinChangeBtn_CloudFlame, [true]);
        this.rightBtn.on(Laya.Event.CLICK, this, this.OnSkinChangeBtn_CloudFlame, [false]);
    };
    GameStart.prototype.RemoveEvent_CloudFlame = function () {
        this.settingBtn.off(Laya.Event.CLICK, this, this.OnSettingBtn_CloudFlame);
        this.startBtn.off(Laya.Event.CLICK, this, this.OnStartBtn_CloudFlame);
        this.leftBtn.off(Laya.Event.CLICK, this, this.OnSkinChangeBtn_CloudFlame);
        this.rightBtn.off(Laya.Event.CLICK, this, this.OnSkinChangeBtn_CloudFlame);
    };
    GameStart.prototype.ShowSkinBtn_CloudFlame = function () {
        this.leftBtn.visible = User_1.default.skinIndex > 0 ? true : false;
        this.rightBtn.visible = User_1.default.skinIndex < User_1.default.skinMax ? true : false;
    };
    GameStart.prototype.ShowSettingBtn_CloudFlame = function () {
        this.settingBtn.skin = SoundMgr_1.default.instance.Enabled_CloudFlame ? "GameCommon/Sound_Yes.png" : "GameCommon/Sound_No.png";
    };
    GameStart.prototype.OnSettingBtn_CloudFlame = function () {
        SoundMgr_1.default.instance.Enabled_CloudFlame = !SoundMgr_1.default.instance.Enabled_CloudFlame;
        if (SoundMgr_1.default.instance.Enabled_CloudFlame) {
            SoundMgr_1.default.instance.PlayBGM_CloudFlame("bgm");
        }
        this.ShowSettingBtn_CloudFlame();
    };
    GameStart.prototype.OnStartBtn_CloudFlame = function () {
        ViewMgr_1.default.instance.OpenView_CloudFlame(ViewMgr_1.ViewDef.Gaming, null, function () {
            ViewMgr_1.default.instance.CloseView_CloudFlame(ViewMgr_1.ViewDef.GameStart);
        });
    };
    GameStart.prototype.OnSkinChangeBtn_CloudFlame = function (IsLeft) {
        User_1.default.skinIndex = IsLeft ? User_1.default.skinIndex - 1 : User_1.default.skinIndex + 1;
        this.ShowSkinBtn_CloudFlame();
        this.roleSkin.ChangeSkin_CloudFlame();
    };
    return GameStart;
}(ViewBase_1.default));
exports.default = GameStart;
},{"../../Mgr/SoundMgr":5,"../../Mgr/ViewMgr":6,"../../User/User":7,"../ViewBase":16,"./RoleSkin":11}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RoleSkin = /** @class */ (function (_super) {
    __extends(RoleSkin, _super);
    function RoleSkin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RoleSkin.prototype.onAwake = function () {
    };
    RoleSkin.prototype.InitSkin_CloudFlame = function () {
    };
    RoleSkin.prototype.ChangeSkin_CloudFlame = function () {
    };
    return RoleSkin;
}(Laya.Script));
exports.default = RoleSkin;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Gaming = /** @class */ (function (_super) {
    __extends(Gaming, _super);
    function Gaming() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Gaming.prototype.onEnable = function () {
    };
    Gaming.prototype.onDisable = function () {
    };
    return Gaming;
}(ViewBase_1.default));
exports.default = Gaming;
},{"../ViewBase":16}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoadingView = /** @class */ (function (_super) {
    __extends(LoadingView, _super);
    function LoadingView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.nProcessWidth = 0;
        return _this;
    }
    LoadingView.prototype.onAwake = function () {
        this.background = this.owner.getChildByName("Bg");
        this.processBarBg = this.background.getChildByName("processBarBg");
        if (this.processBarBg) {
            this.processBar = this.processBarBg.getChildByName("processBar");
            this.nProcessWidth = this.processBar.width;
        }
        else {
            this.processBar = this.background.getChildByName("processBar");
            this.nProcessWidth = Laya.stage.width;
        }
    };
    LoadingView.prototype.onUpdate = function () {
        this.background.width = Laya.stage.width;
        this.background.height = Laya.stage.height;
        if (!this.processBarBg) {
            this.nProcessWidth = Laya.stage.width;
        }
    };
    LoadingView.prototype.SetProcess_CloudFlame = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        var width = this.nProcessWidth * process;
        if (width < 1)
            width = 1;
        this.processBar.width = width;
    };
    return LoadingView;
}(Laya.Script));
exports.default = LoadingView;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TipsView = /** @class */ (function (_super) {
    __extends(TipsView, _super);
    function TipsView() {
        return _super.call(this) || this;
    }
    TipsView.prototype.onAwake = function () {
        this.bg = this.owner.getChildByName("Bg");
        this.bg.x = Laya.stage.width / 2 - this.bg.width / 2;
        this.tipsText = this.bg.getChildByName("Text");
    };
    TipsView.prototype.OpenView_CloudFlame = function (data) {
        _super.prototype.OpenView_CloudFlame.call(this, data);
        this.SetTipsMsg_CloudFlame(data);
        Laya.timer.clearAll(this);
        var self = this;
        Laya.timer.once(3000, this, function () {
            self.CloseView_CloudFlame();
        });
    };
    TipsView.prototype.SetTipsMsg_CloudFlame = function (msg) {
        this.tipsText.text = msg;
    };
    return TipsView;
}(ViewBase_1.default));
exports.default = TipsView;
},{"../ViewBase":16}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewAutoScale = /** @class */ (function (_super) {
    __extends(ViewAutoScale, _super);
    function ViewAutoScale() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ViewAutoScale.prototype.onAwake = function () {
        var curVeiw = this.owner;
        var scaleX = Laya.stage.width / curVeiw.width;
        var scaleY = Laya.stage.height / curVeiw.height;
        var scale = scaleX < scaleY ? scaleX : scaleY;
        curVeiw.scale(scale, scale);
        curVeiw.x = (Laya.stage.width - curVeiw.width * scale) / 2;
        curVeiw.y = (Laya.stage.height - curVeiw.height * scale) / 2;
    };
    return ViewAutoScale;
}(Laya.Script));
exports.default = ViewAutoScale;
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var ViewBase = /** @class */ (function (_super) {
    __extends(ViewBase, _super);
    function ViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onCloseEvent = null;
        _this.onOpenEvent = null;
        _this.viewBase = true;
        _this.viewDef = ViewMgr_1.ViewDef.None;
        _this.data = {};
        return _this;
    }
    ViewBase.prototype.onAwake = function () {
        //删除时自动释放
        this.owner.autoDestroyAtClosed = true;
        this.owner.height = Laya.stage.height;
    };
    ViewBase.prototype.onEnable = function () {
        this.AddEvent_CloudFlame();
    };
    ViewBase.prototype.onDisable = function () {
        this.RemoveEvent_CloudFlame();
    };
    ViewBase.prototype.onDestroy = function () {
        this.RemoveEvent_CloudFlame();
    };
    ViewBase.prototype.OpenView_CloudFlame = function (data) {
        this.data = data;
        this.Show_CloudFlame();
        if (this.onOpenEvent) {
            this.onOpenEvent();
        }
    };
    ViewBase.prototype.AddEvent_CloudFlame = function () {
    };
    ViewBase.prototype.RemoveEvent_CloudFlame = function () {
        Laya.timer.clearAll(this);
    };
    ViewBase.prototype.CloseView_CloudFlame = function () {
        ViewMgr_1.default.instance.CloseView_CloudFlame(this.viewDef);
    };
    ViewBase.prototype.Hide_CloudFlame = function () {
        this.owner.visible = false;
        this.onHide_CloudFlame();
    };
    ViewBase.prototype.Show_CloudFlame = function () {
        this.owner.visible = true;
        this.onShow_CloudFlame();
    };
    ViewBase.prototype.ViewIsHide_CloudFlame = function () {
        return this.owner.alpha == 0;
    };
    ViewBase.prototype.onHide_CloudFlame = function () { };
    ViewBase.prototype.onShow_CloudFlame = function () { };
    ViewBase.prototype.onClose_CloudFlame = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        if (this.onCloseEvent) {
            this.onCloseEvent();
        }
    };
    return ViewBase;
}(Laya.Script));
exports.default = ViewBase;
},{"../Mgr/ViewMgr":6}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            LoadingUI.uiView = { "type": "Scene", "props": { "width": 1920, "height": 1080 }, "compId": 2, "child": [{ "type": "Clip", "props": { "skin": "Loading/LoadingBG.jpg", "name": "Bg" }, "compId": 3, "child": [{ "type": "Clip", "props": { "width": 1920, "skin": "Loading/LoadingBar.png", "name": "processBar", "left": 0, "height": 22, "bottom": 98 }, "compId": 4 }] }, { "type": "Script", "props": { "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 6 }], "loadList": ["Loading/LoadingBG.jpg", "Loading/LoadingBar.png"], "loadList3D": [] };
            return LoadingUI;
        }(Scene));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
